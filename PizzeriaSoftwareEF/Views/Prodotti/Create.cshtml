@model PizzeriaSoftwareEF.Models.Prodotti

@{
    ViewBag.Title = "Create";
}

<h2 class="text-danger text-center">Crea Prodotto</h2>


@using (Html.BeginForm("Create", "Prodotti", FormMethod.Post,new {enctype="multipart/form-data"})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NomeProdotto, htmlAttributes: new { @class = "control-label col-md-2 text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeProdotto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeProdotto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Costo, htmlAttributes: new { @class = "control-label col-md-2 text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Costo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TempoConsegna, htmlAttributes: new { @class = "control-label col-md-2 text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TempoConsegna, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TempoConsegna, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FotoProdotto, htmlAttributes: new { @class = "control-label col-md-2 text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FotoProdotto, new { htmlAttributes = new { @class = "form-control",id="foto", type="file" } })
                @Html.ValidationMessageFor(model => model.FotoProdotto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ingredienti, htmlAttributes: new { @class = "control-label col-md-2 text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ingredienti, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ingredienti, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescrizioneAggiuntiva, htmlAttributes: new { @class = "control-label col-md-2 text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescrizioneAggiuntiva, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescrizioneAggiuntiva, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crea" class="btn btn-danger mt-3 mb-3" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
